apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: ${K8S_NS}
  labels:
    app: otel-collector
spec:
  serviceAccount: ${K8S_SA}
  image: otel/opentelemetry-collector-contrib:latest
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'k8s_pods'
            scrape_interval: 30s
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: "keep"
              regex: "true"
            - source_labels: [__meta_kubernetes_pod_label_k8s_app]
              action: "drop"
              regex: "cilium"
            - source_labels: [__meta_kubernetes_pod_label_istio_io_rev]
              action: "drop"
              regex: "asm-managed"
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: \$\$1:\$\$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
    processors:
      batch:
        send_batch_max_size: 100
        send_batch_size: 100
        timeout: 5s
      resourcedetection:
        detectors: [gcp]
        timeout: 10s

    exporters:
      logging:
        loglevel: debug
      googlemanagedprometheus:
        project: ${PROJECT_ID}
      googlecloud:

    service:
      telemetry:
        logs:
          level: "debug"
        metrics:
          address: ":8888"
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [logging, googlecloud]
        metrics:
          receivers: [prometheus]
          processors: [batch, resourcedetection]
          exporters: [googlemanagedprometheus]
